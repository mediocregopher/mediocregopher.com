{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name viz.ghost, :imports nil, :requires {forest viz.forest, viz.forest viz.forest, grid viz.grid, viz.grid viz.grid, clojure.set clojure.set}, :uses nil, :defs {active-nodes {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 42, :column 7, :end-line 42, :end-column 19, :arglists (quote ([ghost forest]))}, :name viz.ghost/active-nodes, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 19, :method-params ([ghost forest]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ghost forest]))}, add-active-node {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 11, :column 7, :end-line 11, :end-column 22, :arglists (quote ([ghost id]))}, :name viz.ghost/add-active-node, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 22, :method-params ([ghost id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ghost id]))}, filter-active-nodes {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 45, :column 7, :end-line 45, :end-column 26, :arglists (quote ([ghost pred]))}, :name viz.ghost/filter-active-nodes, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 26, :method-params ([ghost pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ghost pred]))}, spawn-children {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 24, :column 8, :end-line 24, :end-column 22, :private true, :arglists (quote ([forest poss-fn id]))}, :private true, :name viz.ghost/spawn-children, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 22, :method-params ([forest poss-fn id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 3, :fn-var true, :arglists (quote ([forest poss-fn id]))}, spawn-children-multi {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 31, :column 8, :end-line 31, :end-column 28, :private true, :arglists (quote ([forest poss-fn ids]))}, :private true, :name viz.ghost/spawn-children-multi, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 28, :method-params ([forest poss-fn ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 3, :fn-var true, :arglists (quote ([forest poss-fn ids]))}, incr {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 38, :column 7, :end-line 38, :end-column 11, :arglists (quote ([ghost forest poss-fn]))}, :name viz.ghost/incr, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 11, :method-params ([ghost forest poss-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ghost forest poss-fn]))}, eg-poss-fn {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 50, :column 8, :end-line 50, :end-column 18, :private true, :arglists (quote ([pos adj-poss]))}, :private true, :name viz.ghost/eg-poss-fn, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 18, :method-params ([pos adj-poss]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pos adj-poss]))}, gen-new-poss {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 17, :column 8, :end-line 17, :end-column 20, :private true, :arglists (quote ([forest poss-fn id]))}, :private true, :name viz.ghost/gen-new-poss, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 20, :method-params ([forest poss-fn id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 3, :fn-var true, :arglists (quote ([forest poss-fn id]))}, new-ghost {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 6, :column 7, :end-line 6, :end-column 16, :arglists (quote ([]))}, :name viz.ghost/new-ghost, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, rm-active-node {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :line 14, :column 7, :end-line 14, :end-column 21, :arglists (quote ([ghost id]))}, :name viz.ghost/rm-active-node, :variadic false, :file "/home/mediocregopher/src/viz/src/viz/ghost.cljs", :end-column 21, :method-params ([ghost id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ghost id]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:active-node-ids :color :pos :id}, :order [:active-node-ids :color :pos :id]}, :doc nil}