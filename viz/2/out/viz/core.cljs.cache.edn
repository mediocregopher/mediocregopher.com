{:rename-macros {}, :renames {}, :externs {console {log {}}, document {}}, :use-macros {}, :excludes #{}, :name viz.core, :imports nil, :requires {gstring goog.string, goog.string goog.string, q quil.core, viz.forest viz.forest, grid viz.grid, m quil.middleware, quil.core quil.core, quil.middleware quil.middleware, goog.string.format goog.string.format, viz.ghost viz.ghost, forest viz.forest, viz.grid viz.grid, ghost viz.ghost, viz.dial viz.dial, dial viz.dial}, :uses nil, :defs {maybe-remove-roots {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 189, :column 8, :end-line 189, :end-column 26, :private true, :arglists (quote ([state]))}, :private true, :name viz.core/maybe-remove-roots, :variadic false, :file "src/viz/core.cljs", :end-column 26, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, draw-node {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 241, :column 8, :end-line 241, :end-column 17, :private true, :arglists (quote ([state node active?]))}, :private true, :name viz.core/draw-node, :variadic false, :file "src/viz/core.cljs", :end-column 17, :method-params ([state node active?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state node active?]))}, draw-state {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 293, :column 7, :end-line 293, :end-column 17, :arglists (quote ([state]))}, :name viz.core/draw-state, :variadic false, :file "src/viz/core.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 293, :end-line 293, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, order-adj-poss-fn {:name viz.core/order-adj-poss-fn, :file "src/viz/core.cljs", :line 168, :column 1, :end-line 168, :end-column 23, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 168, :column 6, :end-line 168, :end-column 23}, :tag any}, viz {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 333, :column 14, :end-line 333, :end-column 17, :export true, :arglists (quote ([]))}, :name viz.core/viz, :variadic false, :file "src/viz/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 333, :end-line 333, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-state {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 218, :column 7, :end-line 218, :end-column 19, :arglists (quote ([state]))}, :name viz.core/update-state, :variadic false, :file "src/viz/core.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, set-dial {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 102, :column 8, :end-line 102, :end-column 16, :private true, :arglists (quote ([state]))}, :private true, :name viz.core/set-dial, :variadic false, :file "src/viz/core.cljs", :end-column 16, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, maybe-exit {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 212, :column 8, :end-line 212, :end-column 18, :private true, :arglists (quote ([state]))}, :private true, :name viz.core/maybe-exit, :variadic false, :file "src/viz/core.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, frame-rate {:name viz.core/frame-rate, :file "src/viz/core.cljs", :line 32, :column 1, :end-line 32, :end-column 16, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 32, :column 6, :end-line 32, :end-column 16}, :tag number}, draw-ellipse {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 232, :column 8, :end-line 232, :end-column 20, :private true, :arglists (quote ([state pos size]))}, :private true, :name viz.core/draw-ellipse, :variadic false, :file "src/viz/core.cljs", :end-column 20, :method-params ([state pos size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 232, :end-line 232, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state pos size]))}, window-partial {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 24, :column 8, :end-line 24, :end-column 22, :private true, :arglists (quote ([k]))}, :private true, :name viz.core/window-partial, :variadic false, :file "src/viz/core.cljs", :end-column 22, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, mk-poss-fn {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 171, :column 8, :end-line 171, :end-column 18, :private true, :arglists (quote ([state]))}, :private true, :name viz.core/mk-poss-fn, :variadic false, :file "src/viz/core.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, take-adj-poss-fn {:name viz.core/take-adj-poss-fn, :file "src/viz/core.cljs", :line 169, :column 1, :end-line 169, :end-column 22, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 169, :column 6, :end-line 169, :end-column 22}, :tag any}, frames-per-color-cycle {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 56, :column 8, :end-line 56, :end-column 30, :private true, :arglists (quote ([state]))}, :private true, :name viz.core/frames-per-color-cycle, :variadic false, :file "src/viz/core.cljs", :end-column 30, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, new-state {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 34, :column 8, :end-line 34, :end-column 17, :private true, :arglists (quote ([]))}, :private true, :name viz.core/new-state, :variadic false, :file "src/viz/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, dist-from {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 111, :column 8, :end-line 111, :end-column 17, :private true, :arglists (quote ([pos1 pos2]))}, :private true, :name viz.core/dist-from, :variadic false, :file "src/viz/core.cljs", :end-column 17, :method-params ([pos1 pos2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pos1 pos2]))}, window-half-size {:name viz.core/window-half-size, :file "src/viz/core.cljs", :line 30, :column 1, :end-line 30, :end-column 22, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 30, :column 6, :end-line 30, :end-column 22}, :tag any}, window-size {:name viz.core/window-size, :file "src/viz/core.cljs", :line 27, :column 1, :end-line 27, :end-column 17, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 27, :column 6, :end-line 27, :end-column 17}, :tag cljs.core/IVector}, scale {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 81, :column 8, :end-line 81, :end-column 13, :private true, :arglists (quote ([state xy]))}, :private true, :name viz.core/scale, :variadic false, :file "src/viz/core.cljs", :end-column 13, :method-params ([state xy]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state xy]))}, in-line? {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 237, :column 8, :end-line 237, :end-column 16, :private true, :arglists (quote ([& nodes])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(nodes)], :arglists ([& nodes]), :arglists-meta (nil)}}, :private true, :name viz.core/in-line?, :variadic true, :file "src/viz/core.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(nodes)], :arglists ([& nodes]), :arglists-meta (nil)}, :method-params [(nodes)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 237, :end-line 237, :max-fixed-arity 0, :fn-var true, :arglists ([& nodes])}, take-adj-poss-fns {:name viz.core/take-adj-poss-fns, :file "src/viz/core.cljs", :line 135, :column 1, :end-line 135, :end-column 23, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 135, :column 6, :end-line 135, :end-column 23}, :tag cljs.core/IMap}, positive {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 16, :column 8, :end-line 16, :end-column 16, :private true, :arglists (quote ([n]))}, :private true, :name viz.core/positive, :variadic false, :file "src/viz/core.cljs", :end-column 16, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, debug {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 13, :column 8, :end-line 13, :end-column 13, :private true, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :private true, :name viz.core/debug, :variadic true, :file "src/viz/core.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, new-active-node {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 51, :column 7, :end-line 51, :end-column 22, :arglists (quote ([state pos]))}, :name viz.core/new-active-node, :variadic false, :file "src/viz/core.cljs", :end-column 22, :method-params ([state pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state pos]))}, mk-take-adj-poss-fn {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 155, :column 8, :end-line 155, :end-column 27, :private true, :arglists (quote ([& ks])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(ks)], :arglists ([& ks]), :arglists-meta (nil)}}, :private true, :name viz.core/mk-take-adj-poss-fn, :variadic true, :file "src/viz/core.cljs", :end-column 27, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(ks)], :arglists ([& ks]), :arglists-meta (nil)}, :method-params [(ks)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 0, :fn-var true, :arglists ([& ks])}, mk-order-adj-poss-fn {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 123, :column 8, :end-line 123, :end-column 28, :private true, :arglists (quote ([& ks])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(ks)], :arglists ([& ks]), :arglists-meta (nil)}}, :private true, :name viz.core/mk-order-adj-poss-fn, :variadic true, :file "src/viz/core.cljs", :end-column 28, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(ks)], :arglists ([& ks]), :arglists-meta (nil)}, :method-params [(ks)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 0, :fn-var true, :arglists ([& ks])}, dist-from-sqr {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 108, :column 8, :end-line 108, :end-column 21, :private true, :arglists (quote ([pos1 pos2]))}, :private true, :name viz.core/dist-from-sqr, :variadic false, :file "src/viz/core.cljs", :end-column 21, :method-params ([pos1 pos2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pos1 pos2]))}, grid-size {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 76, :column 8, :end-line 76, :end-column 17, :private true, :arglists (quote ([state]))}, :private true, :name viz.core/grid-size, :variadic false, :file "src/viz/core.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, ceil-one {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 99, :column 8, :end-line 99, :end-column 16, :private true, :arglists (quote ([x]))}, :private true, :name viz.core/ceil-one, :variadic false, :file "src/viz/core.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, setup {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 59, :column 7, :end-line 59, :end-column 12, :arglists (quote ([]))}, :name viz.core/setup, :variadic false, :file "src/viz/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-dial {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 283, :column 7, :end-line 283, :end-column 16, :arglists (quote ([state dial posL posR]))}, :name viz.core/draw-dial, :variadic false, :file "src/viz/core.cljs", :end-column 16, :method-params ([state dial posL posR]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 283, :end-line 283, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state dial posL posR]))}, in-bounds? {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 87, :column 8, :end-line 87, :end-column 18, :private true, :arglists (quote ([state pos]))}, :private true, :name viz.core/in-bounds?, :variadic false, :file "src/viz/core.cljs", :end-column 18, :method-params ([state pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state pos]))}, update-node-meta {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 199, :column 8, :end-line 199, :end-column 24, :private true, :arglists (quote ([state id f]))}, :private true, :name viz.core/update-node-meta, :variadic false, :file "src/viz/core.cljs", :end-column 24, :method-params ([state id f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state id f]))}, draw-lines {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 261, :column 7, :end-line 261, :end-column 17, :arglists (quote ([state forest parent node]))}, :name viz.core/draw-lines, :variadic false, :file "src/viz/core.cljs", :end-column 17, :method-params ([state forest parent node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 261, :end-line 261, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state forest parent node]))}, ghost-incr {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 185, :column 8, :end-line 185, :end-column 18, :private true, :arglists (quote ([state poss-fn]))}, :private true, :name viz.core/ghost-incr, :variadic false, :file "src/viz/core.cljs", :end-column 18, :method-params ([state poss-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state poss-fn]))}, draw-line {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 251, :column 8, :end-line 251, :end-column 17, :private true, :arglists (quote ([state node parent]))}, :private true, :name viz.core/draw-line, :variadic false, :file "src/viz/core.cljs", :end-column 17, :method-params ([state node parent]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state node parent]))}, order-adj-poss-fns {:name viz.core/order-adj-poss-fns, :file "src/viz/core.cljs", :line 114, :column 1, :end-line 114, :end-column 24, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 114, :column 6, :end-line 114, :end-column 24}, :tag cljs.core/IMap}, ghost-set-active-nodes-color {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 202, :column 8, :end-line 202, :end-column 36, :private true, :arglists (quote ([state]))}, :private true, :name viz.core/ghost-set-active-nodes-color, :variadic false, :file "src/viz/core.cljs", :end-column 36, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 202, :end-line 202, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, bounds-buffer {:name viz.core/bounds-buffer, :file "src/viz/core.cljs", :line 85, :column 1, :end-line 85, :end-column 19, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 85, :column 6, :end-line 85, :end-column 19}, :tag number}, curr-second {:protocol-inline nil, :meta {:file "/home/mediocregopher/src/viz/src/viz/core.cljs", :line 73, :column 8, :end-line 73, :end-column 19, :private true, :arglists (quote ([state]))}, :private true, :name viz.core/curr-second, :variadic false, :file "src/viz/core.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:features :active-node-ids :hsb :min :grid-width :frame-rate :color-cycle-period :fn :meta :frame :color :heartbeat-plot :exit-wait-frames :pos :gif-seconds :val :update :size :title :tail-length :setup :middleware :host :forest :max :id :keep-on-top :random :host-id :no-start :dial :ghost :draw :centered :child-ids}, :order [:grid-width :frame-rate :color-cycle-period :frame :heartbeat-plot :exit-wait-frames :gif-seconds :tail-length :forest :dial :ghost :color :hsb :random :centered :val :id :active-node-ids :pos :meta :child-ids :min :max :host :features :keep-on-top :update :size :title :setup :middleware :draw :no-start :fn :host-id]}, :doc nil}